import io.spring.gradle.convention.Utils

buildscript {
	ext {
		snapshotBuild = Utils.isSnapshot(project)
		milestoneBuild = Utils.isMilestone(project)
		releaseBuild = Utils.isRelease(project)
	}
	repositories {
		mavenCentral()
		gradlePluginPortal()
		maven { url 'https://repo.spring.io/plugins-release' }
		maven {
			url 'https://repo.spring.io/plugins-snapshot'
			if (project.hasProperty('artifactoryUsername')) {
				credentials {
					username "$artifactoryUsername"
					password "$artifactoryPassword"
				}
			}
		}
	}
}

apply plugin: 'io.spring.convention.root'

description = 'Spring Data for Apache Geode Build'

allprojects {

	group = 'org.springframework.data'

	repositories {

		if (version.contains('-')) {
			maven { url "https://repo.spring.io/milestone" }
		}
		if (version.endsWith('-SNAPSHOT')) {
			maven { url "https://repo.spring.io/snapshot" }
		}
	}
}

nohttp {
	source.excludes = [
		"**/.gradle/**",
		"**/.m2/**",
		"**/build/**",
		"**/target/**",
		"**/spring.schemas",
		"**/docs/asciidoc/images/epub-cover.svg"
	]
}
